// @generated by protobuf-ts 2.11.0 with parameter client_grpc1,server_grpc1,output_legacy_commonjs
// @generated from protobuf file "web_event/user_create_event_message.proto" (package "user_create_event_message", syntax proto3)
// tslint:disable
import { UserCacheEventResponse } from "./user_create_event_message";
import { UserCacheEventRequest } from "./user_create_event_message";
import { UserValidateEventResponse } from "./user_create_event_message";
import { UserValidateEventRequest } from "./user_create_event_message";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service user_create_event_message.UserCreateEventService
 */
export interface IUserCreateEventService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: ValidateUserEvent
     */
    validateUserEvent: grpc.handleUnaryCall<UserValidateEventRequest, UserValidateEventResponse>;
    /**
     * @generated from protobuf rpc: CacheUserEvent
     */
    cacheUserEvent: grpc.handleUnaryCall<UserCacheEventRequest, UserCacheEventResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service user_create_event_message.UserCreateEventService.
 *
 * Usage: Implement the interface IUserCreateEventService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IUserCreateEventService = ...
 * server.addService(userCreateEventServiceDefinition, service);
 * ```
 */
export const userCreateEventServiceDefinition: grpc.ServiceDefinition<IUserCreateEventService> = {
    validateUserEvent: {
        path: "/user_create_event_message.UserCreateEventService/ValidateUserEvent",
        originalName: "ValidateUserEvent",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => UserValidateEventResponse.fromBinary(bytes),
        requestDeserialize: bytes => UserValidateEventRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(UserValidateEventResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(UserValidateEventRequest.toBinary(value))
    },
    cacheUserEvent: {
        path: "/user_create_event_message.UserCreateEventService/CacheUserEvent",
        originalName: "CacheUserEvent",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => UserCacheEventResponse.fromBinary(bytes),
        requestDeserialize: bytes => UserCacheEventRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(UserCacheEventResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(UserCacheEventRequest.toBinary(value))
    }
};
