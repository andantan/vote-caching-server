// @generated by protobuf-ts 2.11.0 with parameter client_grpc1,server_grpc1,output_legacy_commonjs
// @generated from protobuf file "web_event/proposal_create_event_message.proto" (package "proposal_create_event_message", syntax proto3)
// tslint:disable
import { ProposalCacheEventResponse } from "./proposal_create_event_message";
import { ProposalCacheEventRequest } from "./proposal_create_event_message";
import { ProposalValidateEventResponse } from "./proposal_create_event_message";
import { ProposalValidateEventRequest } from "./proposal_create_event_message";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service proposal_create_event_message.ProposalCreateEventService
 */
export interface IProposalCreateEventService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: ValidateProposalEvent
     */
    validateProposalEvent: grpc.handleUnaryCall<ProposalValidateEventRequest, ProposalValidateEventResponse>;
    /**
     * @generated from protobuf rpc: CacheProposalEvent
     */
    cacheProposalEvent: grpc.handleUnaryCall<ProposalCacheEventRequest, ProposalCacheEventResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service proposal_create_event_message.ProposalCreateEventService.
 *
 * Usage: Implement the interface IProposalCreateEventService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IProposalCreateEventService = ...
 * server.addService(proposalCreateEventServiceDefinition, service);
 * ```
 */
export const proposalCreateEventServiceDefinition: grpc.ServiceDefinition<IProposalCreateEventService> = {
    validateProposalEvent: {
        path: "/proposal_create_event_message.ProposalCreateEventService/ValidateProposalEvent",
        originalName: "ValidateProposalEvent",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => ProposalValidateEventResponse.fromBinary(bytes),
        requestDeserialize: bytes => ProposalValidateEventRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(ProposalValidateEventResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(ProposalValidateEventRequest.toBinary(value))
    },
    cacheProposalEvent: {
        path: "/proposal_create_event_message.ProposalCreateEventService/CacheProposalEvent",
        originalName: "CacheProposalEvent",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => ProposalCacheEventResponse.fromBinary(bytes),
        requestDeserialize: bytes => ProposalCacheEventRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(ProposalCacheEventResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(ProposalCacheEventRequest.toBinary(value))
    }
};
