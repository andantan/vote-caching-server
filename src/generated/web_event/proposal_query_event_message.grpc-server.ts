// @generated by protobuf-ts 2.11.0 with parameter client_grpc1,server_grpc1,output_legacy_commonjs
// @generated from protobuf file "web_event/proposal_query_event_message.proto" (package "proposal_query_event_message", syntax proto3)
// tslint:disable
import { GetFilteredProposalListResponse } from "./proposal_query_event_message";
import { GetFilteredProposalListRequest } from "./proposal_query_event_message";
import { GetProposalDetailResponse } from "./proposal_query_event_message";
import { GetProposalDetailRequest } from "./proposal_query_event_message";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service proposal_query_event_message.ProposalQueryEventService
 */
export interface IProposalQueryEventService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: GetProposalDetail
     */
    getProposalDetail: grpc.handleUnaryCall<GetProposalDetailRequest, GetProposalDetailResponse>;
    /**
     * @generated from protobuf rpc: GetFilteredProposalList
     */
    getFilteredProposalList: grpc.handleUnaryCall<GetFilteredProposalListRequest, GetFilteredProposalListResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service proposal_query_event_message.ProposalQueryEventService.
 *
 * Usage: Implement the interface IProposalQueryEventService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IProposalQueryEventService = ...
 * server.addService(proposalQueryEventServiceDefinition, service);
 * ```
 */
export const proposalQueryEventServiceDefinition: grpc.ServiceDefinition<IProposalQueryEventService> = {
    getProposalDetail: {
        path: "/proposal_query_event_message.ProposalQueryEventService/GetProposalDetail",
        originalName: "GetProposalDetail",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => GetProposalDetailResponse.fromBinary(bytes),
        requestDeserialize: bytes => GetProposalDetailRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(GetProposalDetailResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(GetProposalDetailRequest.toBinary(value))
    },
    getFilteredProposalList: {
        path: "/proposal_query_event_message.ProposalQueryEventService/GetFilteredProposalList",
        originalName: "GetFilteredProposalList",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => GetFilteredProposalListResponse.fromBinary(bytes),
        requestDeserialize: bytes => GetFilteredProposalListRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(GetFilteredProposalListResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(GetFilteredProposalListRequest.toBinary(value))
    }
};
