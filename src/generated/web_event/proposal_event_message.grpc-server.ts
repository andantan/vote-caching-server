// @generated by protobuf-ts 2.11.0 with parameter client_grpc1,server_grpc1,output_legacy_commonjs
// @generated from protobuf file "web_event/proposal_event_message.proto" (package "proposal_event_message", syntax proto3)
// tslint:disable
import { ValidateProposalEventResponse } from "./proposal_event_message";
import { NewProposalEvent } from "./proposal_event_message";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service proposal_event_message.NewProposalEventService
 */
export interface INewProposalEventService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: ValidateNewProposalEvent
     */
    validateNewProposalEvent: grpc.handleUnaryCall<NewProposalEvent, ValidateProposalEventResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service proposal_event_message.NewProposalEventService.
 *
 * Usage: Implement the interface INewProposalEventService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: INewProposalEventService = ...
 * server.addService(newProposalEventServiceDefinition, service);
 * ```
 */
export const newProposalEventServiceDefinition: grpc.ServiceDefinition<INewProposalEventService> = {
    validateNewProposalEvent: {
        path: "/proposal_event_message.NewProposalEventService/ValidateNewProposalEvent",
        originalName: "ValidateNewProposalEvent",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => ValidateProposalEventResponse.fromBinary(bytes),
        requestDeserialize: bytes => NewProposalEvent.fromBinary(bytes),
        responseSerialize: value => Buffer.from(ValidateProposalEventResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(NewProposalEvent.toBinary(value))
    }
};
