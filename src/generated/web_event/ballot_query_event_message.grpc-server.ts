// @generated by protobuf-ts 2.11.0 with parameter client_grpc1,server_grpc1,output_legacy_commonjs
// @generated from protobuf file "web_event/ballot_query_event_message.proto" (package "ballot_query_event_message", syntax proto3)
// tslint:disable
import { GetUserBallotsResponse } from "./ballot_query_event_message";
import { GetUserBallotsRequest } from "./ballot_query_event_message";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service ballot_query_event_message.BallotQueryEventService
 */
export interface IBallotQueryEventService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: GetUserBallots
     */
    getUserBallots: grpc.handleUnaryCall<GetUserBallotsRequest, GetUserBallotsResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service ballot_query_event_message.BallotQueryEventService.
 *
 * Usage: Implement the interface IBallotQueryEventService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IBallotQueryEventService = ...
 * server.addService(ballotQueryEventServiceDefinition, service);
 * ```
 */
export const ballotQueryEventServiceDefinition: grpc.ServiceDefinition<IBallotQueryEventService> = {
    getUserBallots: {
        path: "/ballot_query_event_message.BallotQueryEventService/GetUserBallots",
        originalName: "GetUserBallots",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => GetUserBallotsResponse.fromBinary(bytes),
        requestDeserialize: bytes => GetUserBallotsRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(GetUserBallotsResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(GetUserBallotsRequest.toBinary(value))
    }
};
