// @generated by protobuf-ts 2.11.0 with parameter client_grpc1,server_grpc1,output_legacy_commonjs
// @generated from protobuf file "web_event/ballot_event_message.proto" (package "ballot_event_message", syntax proto3)
// tslint:disable
import { CacheBallotEventResponse } from "./ballot_event_message";
import { CacheBallotEventRequest } from "./ballot_event_message";
import { ValidateBallotEventResponse } from "./ballot_event_message";
import { ValidateBallotEventRequest } from "./ballot_event_message";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service ballot_event_message.NewBallotEventService
 */
export interface INewBallotEventService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: ValidateNewBallotEvent
     */
    validateNewBallotEvent: grpc.handleUnaryCall<ValidateBallotEventRequest, ValidateBallotEventResponse>;
    /**
     * @generated from protobuf rpc: CacheNewBallotEvent
     */
    cacheNewBallotEvent: grpc.handleUnaryCall<CacheBallotEventRequest, CacheBallotEventResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service ballot_event_message.NewBallotEventService.
 *
 * Usage: Implement the interface INewBallotEventService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: INewBallotEventService = ...
 * server.addService(newBallotEventServiceDefinition, service);
 * ```
 */
export const newBallotEventServiceDefinition: grpc.ServiceDefinition<INewBallotEventService> = {
    validateNewBallotEvent: {
        path: "/ballot_event_message.NewBallotEventService/ValidateNewBallotEvent",
        originalName: "ValidateNewBallotEvent",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => ValidateBallotEventResponse.fromBinary(bytes),
        requestDeserialize: bytes => ValidateBallotEventRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(ValidateBallotEventResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(ValidateBallotEventRequest.toBinary(value))
    },
    cacheNewBallotEvent: {
        path: "/ballot_event_message.NewBallotEventService/CacheNewBallotEvent",
        originalName: "CacheNewBallotEvent",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => CacheBallotEventResponse.fromBinary(bytes),
        requestDeserialize: bytes => CacheBallotEventRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(CacheBallotEventResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(CacheBallotEventRequest.toBinary(value))
    }
};
