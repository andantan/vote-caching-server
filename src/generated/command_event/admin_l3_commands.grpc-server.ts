// @generated by protobuf-ts 2.11.0 with parameter client_grpc1,server_grpc1,output_legacy_commonjs
// @generated from protobuf file "command_event/admin_l3_commands.proto" (package "admin_l3_commands", syntax proto3)
// tslint:disable
import { L3HealthCheckResponse } from "./admin_l3_commands";
import { L3HealthCheckRequest } from "./admin_l3_commands";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service admin_l3_commands.L3Commands
 */
export interface IL3Commands extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: CheckHealth
     */
    checkHealth: grpc.handleUnaryCall<L3HealthCheckRequest, L3HealthCheckResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service admin_l3_commands.L3Commands.
 *
 * Usage: Implement the interface IL3Commands and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IL3Commands = ...
 * server.addService(l3CommandsDefinition, service);
 * ```
 */
export const l3CommandsDefinition: grpc.ServiceDefinition<IL3Commands> = {
    checkHealth: {
        path: "/admin_l3_commands.L3Commands/CheckHealth",
        originalName: "CheckHealth",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => L3HealthCheckResponse.fromBinary(bytes),
        requestDeserialize: bytes => L3HealthCheckRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(L3HealthCheckResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(L3HealthCheckRequest.toBinary(value))
    }
};
