"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreatedBlockEventService = exports.ReportBlockEventResponse = exports.CreatedBlockEvent = void 0;
// @generated by protobuf-ts 2.11.0 with parameter client_grpc1,server_grpc1,output_legacy_commonjs
// @generated from protobuf file "blockchain_event/block_event_message.proto" (package "block_event_message", syntax proto3)
// tslint:disable
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
// @generated message type with reflection information, may provide speed optimized methods
class CreatedBlockEvent$Type extends runtime_4.MessageType {
    constructor() {
        super("block_event_message.CreatedBlockEvent", [
            { no: 1, name: "topic", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "height", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.topic = "";
        message.height = 0;
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string topic */ 1:
                    message.topic = reader.string();
                    break;
                case /* uint32 height */ 2:
                    message.height = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string topic = 1; */
        if (message.topic !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.topic);
        /* uint32 height = 2; */
        if (message.height !== 0)
            writer.tag(2, runtime_1.WireType.Varint).uint32(message.height);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message block_event_message.CreatedBlockEvent
 */
exports.CreatedBlockEvent = new CreatedBlockEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReportBlockEventResponse$Type extends runtime_4.MessageType {
    constructor() {
        super("block_event_message.ReportBlockEventResponse", [
            { no: 1, name: "success", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "message", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.success = false;
        message.message = "";
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool success */ 1:
                    message.success = reader.bool();
                    break;
                case /* string message */ 2:
                    message.message = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bool success = 1; */
        if (message.success !== false)
            writer.tag(1, runtime_1.WireType.Varint).bool(message.success);
        /* string message = 2; */
        if (message.message !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.message);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message block_event_message.ReportBlockEventResponse
 */
exports.ReportBlockEventResponse = new ReportBlockEventResponse$Type();
/**
 * @generated ServiceType for protobuf service block_event_message.CreatedBlockEventService
 */
exports.CreatedBlockEventService = new runtime_rpc_1.ServiceType("block_event_message.CreatedBlockEventService", [
    { name: "ReportCreatedBlockEvent", options: {}, I: exports.CreatedBlockEvent, O: exports.ReportBlockEventResponse }
]);
//# sourceMappingURL=block_event_message.js.map